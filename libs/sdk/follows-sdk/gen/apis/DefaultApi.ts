/* tslint:disable */
/* eslint-disable */
/**
 * follows API
 * Following/followers information and actions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    FollowersDto,
    FollowersDtoFromJSON,
    FollowersDtoToJSON,
    FollowingDto,
    FollowingDtoFromJSON,
    FollowingDtoToJSON,
} from '../models';

export interface FollowsControllerFollowRequest {
    profileId: string;
}

export interface FollowsControllerGetFollowersByUserRequest {
    profileId: string;
}

export interface FollowsControllerGetFollowingByUserRequest {
    profileId: string;
}

export interface FollowsControllerUnfollowRequest {
    profileId: string;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     */
    async followsControllerFollowRaw(requestParameters: FollowsControllerFollowRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.profileId === null || requestParameters.profileId === undefined) {
            throw new runtime.RequiredError('profileId','Required parameter requestParameters.profileId was null or undefined when calling followsControllerFollow.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follows/{profileId}/follow`.replace(`{${"profileId"}}`, encodeURIComponent(String(requestParameters.profileId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async followsControllerFollow(requestParameters: FollowsControllerFollowRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.followsControllerFollowRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async followsControllerGetFollowersByUserRaw(requestParameters: FollowsControllerGetFollowersByUserRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FollowersDto>> {
        if (requestParameters.profileId === null || requestParameters.profileId === undefined) {
            throw new runtime.RequiredError('profileId','Required parameter requestParameters.profileId was null or undefined when calling followsControllerGetFollowersByUser.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follows/{profileId}/followers`.replace(`{${"profileId"}}`, encodeURIComponent(String(requestParameters.profileId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FollowersDtoFromJSON(jsonValue));
    }

    /**
     */
    async followsControllerGetFollowersByUser(requestParameters: FollowsControllerGetFollowersByUserRequest, initOverrides?: RequestInit): Promise<FollowersDto> {
        const response = await this.followsControllerGetFollowersByUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async followsControllerGetFollowingByUserRaw(requestParameters: FollowsControllerGetFollowingByUserRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<FollowingDto>> {
        if (requestParameters.profileId === null || requestParameters.profileId === undefined) {
            throw new runtime.RequiredError('profileId','Required parameter requestParameters.profileId was null or undefined when calling followsControllerGetFollowingByUser.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follows/{profileId}/following`.replace(`{${"profileId"}}`, encodeURIComponent(String(requestParameters.profileId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FollowingDtoFromJSON(jsonValue));
    }

    /**
     */
    async followsControllerGetFollowingByUser(requestParameters: FollowsControllerGetFollowingByUserRequest, initOverrides?: RequestInit): Promise<FollowingDto> {
        const response = await this.followsControllerGetFollowingByUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async followsControllerUnfollowRaw(requestParameters: FollowsControllerUnfollowRequest, initOverrides?: RequestInit): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.profileId === null || requestParameters.profileId === undefined) {
            throw new runtime.RequiredError('profileId','Required parameter requestParameters.profileId was null or undefined when calling followsControllerUnfollow.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/follows/{profileId}/follow`.replace(`{${"profileId"}}`, encodeURIComponent(String(requestParameters.profileId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     */
    async followsControllerUnfollow(requestParameters: FollowsControllerUnfollowRequest, initOverrides?: RequestInit): Promise<boolean> {
        const response = await this.followsControllerUnfollowRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
